{"version":3,"file":"badger-accordion.esm.js","sources":["../src/js/array-from-polyfill.js","../src/js/transition-end.js","../src/js/badger-accordion.js"],"sourcesContent":["if (!Array.from) {\n    Array.from = (function() {\n        var toStr = Object.prototype.toString;\n        var isCallable = function(fn) {\n            return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n        };\n        var toInteger = function(value) {\n            var number = Number(value);\n            if (isNaN(number)) {\n                return 0;\n            }\n            if (number === 0 || !isFinite(number)) {\n                return number;\n            }\n            return (\n                number > 0\n                    ? 1\n                    : -1) * Math.floor(Math.abs(number));\n        };\n        var maxSafeInteger = Math.pow(2, 53) - 1;\n        var toLength = function(value) {\n            var len = toInteger(value);\n            return Math.min(Math.max(len, 0), maxSafeInteger);\n        };\n\n        // The length property of the from method is 1.\n        return function from(arrayLike/* , mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            var C = this;\n\n            // 2. Let items be ToObject(arrayLike).\n            var items = Object(arrayLike);\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError('Array.from requires an array-like object - not null or undefined');\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            var mapFn = arguments.length > 1\n                ? arguments[1]\n                : void undefined;\n            var T;\n            if (typeof mapFn !== 'undefined') {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError('Array.from: when provided, the second argument must be a function');\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2];\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            var len = toLength(items.length);\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            var A = isCallable(C)\n                ? Object(new C(len))\n                : new Array(len);\n\n            // 16. Let k be 0.\n            var k = 0;\n            // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n            var kValue;\n            while (k < len) {\n                kValue = items[k];\n                if (mapFn) {\n                    A[k] = typeof T === 'undefined'\n                        ? mapFn(kValue, k)\n                        : mapFn.call(T, kValue, k);\n                } else {\n                    A[k] = kValue;\n                }\n                k += 1;\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len;\n            // 20. Return A.\n            return A;\n        };\n    }());\n}\n\n/* eslint-disable no-undef */\nexport default module;\n","/*\n\tBy Osvaldas Valutis, www.osvaldas.info\n\tAvailable for use under the MIT License\n*/\n/* eslint-disable no-unused-vars */\n(function(document, window) {\n    let el = document.body || document.documentElement,\n        s = el.style,\n        prefixAnimation = '',\n        prefixTransition = '';\n\n    if (s.WebkitAnimation == '')\n        prefixAnimation = '-webkit-';\n    if (s.MozAnimation == '')\n        prefixAnimation = '-moz-';\n    if (s.OAnimation == '')\n        prefixAnimation = '-o-';\n\n    if (s.WebkitTransition == '')\n        prefixTransition = '-webkit-';\n    if (s.MozTransition == '')\n        prefixTransition = '-moz-';\n    if (s.OTransition == '')\n        prefixTransition = '-o-';\n\n    Object.defineProperty(Object.prototype, 'onCSSAnimationEnd', {\n        value: function(callback) {\n            var runOnce = function(e) {\n                callback();\n                e.target.removeEventListener(e.type, runOnce);\n            };\n            this.addEventListener('webkitAnimationEnd', runOnce);\n            this.addEventListener('mozAnimationEnd', runOnce);\n            this.addEventListener('oAnimationEnd', runOnce);\n            this.addEventListener('oanimationend', runOnce);\n            this.addEventListener('animationend', runOnce);\n            if ((prefixAnimation == '' && !('animation' in s)) || getComputedStyle(this)[prefixAnimation + 'animation-duration'] == '0s')\n                callback();\n            return this;\n        },\n        enumerable: false,\n        writable: true\n    });\n\n    Object.defineProperty(Object.prototype, 'onCSSTransitionEnd', {\n        value: function(callback) {\n            var runOnce = function runOnce(e) {\n                callback();\n                e.target.removeEventListener(e.type, runOnce);\n            };\n            this.addEventListener('webkitTransitionEnd', runOnce);\n            this.addEventListener('mozTransitionEnd', runOnce);\n            this.addEventListener('oTransitionEnd', runOnce);\n            this.addEventListener('transitionend', runOnce);\n            this.addEventListener('transitionend', runOnce);\n            if (prefixTransition == '' && !('transition' in s) || getComputedStyle(this)[prefixTransition + 'transition-duration'] == '0s')\n                callback();\n            return this;\n        },\n        enumerable: false,\n        writable: true\n    });\n}(document, window, 0));\n\n/* eslint-disable no-undef */\nexport default module;\n","/**\n *  ACCORDION\n *\n * A lightwight vanilla JS accordion with an exstensible API\n */\n\n// import uuid from 'uuid/v4';\n// const uuidV4 = uuid;\n/* eslint-disable no-unused-vars */\nimport arrayFromPolyfill from 'array-from-polyfill';\nimport onCSSTransitionEnd from 'transition-end';\n\n/**\n * CONSTRUCTOR\n * Initializes the object\n */\nclass BadgerAccordion {\n    constructor(el, options) {\n        const container = typeof el === 'string' ? document.querySelector(el) : el;\n\n        // If el is not defined\n        if (container == null) {\n            return;\n        }\n\n\n        const defaults = {\n            headerClass:        '.js-badger-accordion-header',\n            panelClass:         '.js-badger-accordion-panel',\n            panelInnerClass:    '.js-badger-accordion-panel-inner',\n            hiddenClass:        '-ba-is-hidden',\n            activeClass:        '-ba-is-active',\n            get hidenClass() { return this.hiddenClass; },\n            initializedClass:    'badger-accordion--initialized',\n            get initalisedClass() { return this.initializedClass; },\n            headerDataAttr:     'data-badger-accordion-header-id',\n            openMultiplePanels: false,\n            openHeadersOnLoad:  [],\n            addListenersOnInit: true,\n            headerOpenLabel:    '',\n            headerCloseLabel:   '',\n            roles:              true\n            // toggleEl:            // If you want to use a different element to trigger the accordion\n        };\n\n        // Options\n        this.settings = Object.assign({}, defaults, options);\n\n        // Setting getting elements\n        this.container = container;\n\n        // Selecting children of the current accordion instance\n        const children = Array.from(this.container.children);\n\n        // Since the Accordions header button is nested inside an element with class\n        // of `badger-accordion__header` it is a grandchild of the accordion instance.\n        // In order to have nested accordions we need each to only get all the button\n        // elements for this instance. Here an array is created to show all the children\n        // of the element `badger-accordion__header`.\n        const headerParent = children.filter(header => !header.classList.contains(this.settings.panelClass.substr(1)));\n\n        // Creating an array of all DOM nodes that are Accordion headers\n        this.headers = headerParent.reduce((acc, header) => {\n            // Gets all the elements that have the headerClass\n            const a = Array.from(header.children).filter( child => child.classList.contains( this.settings.headerClass.substr(1) ));\n\n            // Merges the current `badger-accordion__header` accordion triggers\n            // with all the others.\n            acc = [].concat(...acc, a);\n\n            return acc;\n        }, []);\n\n        // Creates an array of all panel elements for this instance of the accordion\n        this.panels = children.filter(panel => panel.classList.contains( this.settings.panelClass.substr(1) ));\n\n        this.toggleEl = this.settings.toggleEl !== undefined ? Array.from(this.container.querySelectorAll(this.settings.toggleEl)) : this.headers;\n\n\n        // This is for managing state of the accordion. It by default sets\n        // all accordion panels to be closed\n        this.states = [].map.call(this.headers, () => {\n            return { state: 'closed' };\n        });\n\n        this.ids = [].map.call(this.headers, () => {\n            return { id: Math.floor((Math.random() * 1000000) + 1) };\n        });\n\n        // This is to ensure that once an open/close event has been fired\n        // another cannot start until the first event has finished.\n        // @TODO - get this working...\n        this.toggling = false;\n\n        // Initiating the accordion\n        if( this.container ) {\n            this.init();\n        } else {\n            /* eslint-disable no-console */\n            console.log('Something is wrong with you markup...');\n        }\n    }\n\n\n    /**\n     *  INIT\n     *\n     *  Initalises the accordion\n     */\n    init() {\n        // Sets up ID, aria attrs & data-attrs\n        this._setupAttributes();\n\n        // Setting up the inital view of the accordion\n        this._initalState();\n\n        // Setting the height of each panel\n        this.calculateAllPanelsHeight();\n\n        // Inserting data-attribute onto each `header`\n        this._insertDataAttrs();\n\n        // Adding listeners to headers\n        this._addListeners();\n\n        // Adds class to accordion for initalisation\n        this._finishInitialization();\n    }\n\n    /**\n     * CHECK ROLES ETTING\n     * @return {[boolean]}\n     * Checks roles setting for all roles or a single role.\n     * First checks if a `boolean` has been used to set all\n     * roles to either true or false. If the setting is an\n     * object it will only set the attribute where each\n     * attribute has explicitly been set as true, eg;\n     * ```\n     * roles: {\n     *     region: true\n     * }\n     * ```\n     */\n    _setRole(role, el) {\n        if(typeof this.settings.roles === 'boolean' && this.settings.roles || this.settings.roles[role] !== undefined && this.settings.roles[role] !== false) {\n            el.setAttribute('role', role);\n        }\n    }\n\n\n    /**\n     *  INSERT DATA ATTRS\n     *\n     *  Updates state object for inital loading of the accordion\n     */\n    _initalState() {\n        // Sets state object as per `this.settings.openHeadersOnLoad`\n        const headersToOpen = this.settings.openHeadersOnLoad;\n\n        if (headersToOpen.length) {\n            this._openHeadersOnLoad(headersToOpen);\n        }\n\n        // Render DOM as per the updates `this.states` object\n        this._renderDom();\n    }\n\n\n    /**\n     *  INSERT DATA ATTRS\n     *\n     *  Adds `headerDataAttr` to all headers\n     */\n    _insertDataAttrs() {\n        this.headers.forEach( (header, index) => {\n            header.setAttribute(this.settings.headerDataAttr, index);\n        });\n    }\n\n\n    /**\n     *  FINISH INITALISATION\n     *\n     *  Adds in `initializedClass` to accordion\n     */\n    _finishInitialization() {\n        this.container.classList.add(this.settings.initializedClass);\n        this._setRole('presentation', this.container);\n    }\n\n\n    /**\n     *  ADD LISTENERS\n     *\n     *  Adds click event to each header\n     */\n    _addListeners() {\n        if (!this.settings.addListenersOnInit) return;\n\n        // So we can reference the badger-accordion object inside out eventListener\n        const _this = this;\n\n        // Adding click event to accordion\n        this.headers.forEach((header, index) => {\n            header.addEventListener('click', function() {\n                // Getting the target of the click\n                // const clickedEl = event.target;\n\n                _this.handleClick(header, index);\n            });\n        });\n    }\n\n\n    /**\n     *  HANDLE CLICK\n     *\n     *  Handles click and checks if click was on an header element\n     *  @param {object} targetHeader - The header node you want to open\n     */\n    handleClick(targetHeader, headerIndex) {\n        // Removing current `.` from `this.settings.headerClass` class so it can\n        // be checked against the `targetHeader` classList\n        const targetHeaderClass = this.settings.headerClass.substr(1);\n\n        // Checking that the thing that was clicked on was the accordions header\n        if (targetHeader.classList.contains(targetHeaderClass) && this.toggling === false) {\n            this.toggling = true;\n\n            // Updating states\n            this.setState(headerIndex);\n\n            // Render DOM as per the updates `this.states` object\n            this._renderDom();\n        }\n    }\n\n\n    /**\n     *  SET STATES\n     *\n     *  Sets the state for all headers. The 'target header' will have its state toggeled\n     *  @param {object} targetHeaderId - The header node you want to open\n     */\n    setState(targetHeaderId) {\n        const states = this.getState();\n\n        // If `this.settings.openMultiplePanels` is false we need to ensure only one panel\n        // be can open at once. If it is false then all panels state APART from the one that\n        // has just been clicked needs to be set to 'closed'.\n        if (!this.settings.openMultiplePanels) {\n            states.filter((state, index) => {\n                if (index != targetHeaderId) {\n                    state.state = 'closed';\n                }\n            });\n        }\n\n        // Toggles the state value of the target header. This was `array.find` but `find`\n        // isnt supported in IE11\n        states.filter((state, index) => {\n            if (index == targetHeaderId) {\n                const newState = this.toggleState(state.state);\n                return (state.state = newState);\n            }\n        });\n    }\n\n\n    /**\n     *  RENDER DOM\n     *\n     *  Renders the accordion in the DOM using the `this.states` object\n     */\n    _renderDom() {\n        // Filter through all open headers and open them\n        this.states.filter( (state, index) => {\n            if(state.state === 'open') {\n                // Opening the current panel but _NOT_ updating the state\n                this.open(index, false);\n            }\n        });\n\n        // Filter through all closed headers and closes them\n        this.states.filter( (state, index) => {\n            if(state.state === 'closed') {\n                // Closing the current panel but _NOT_ updating the state\n                this.close(index, false);\n            }\n        });\n    }\n\n\n    /**\n     *  OPEN\n     *\n     *  Closes a specific panel\n     *  @param {integer} headerIndex - The header node index you want to open\n     */\n    open(headerIndex, setState = true) {\n        // 1. If being fired directly the state needs to be updated.\n        if(setState) {\n            this.setState(headerIndex);\n        }\n\n        this.togglePanel('open', headerIndex);\n    }\n\n\n    /**\n     *  CLOSE\n     *\n     *  Closes a specific panel\n     *  @param {integer} headerIndex - The header node index you want to close\n     */\n    close(headerIndex, setState = true) {\n        // 1. If being fired directly the state needs to be updated.\n        if(setState) {\n            this.setState(headerIndex);\n        }\n\n        this.togglePanel('closed', headerIndex);\n    }\n\n\n    /**\n     *  OPEN ALL\n     *\n     *  Opens all panels\n     */\n    openAll() {\n        this.headers.forEach((header, headerIndex) => {\n            this.togglePanel('open', headerIndex);\n        });\n    }\n\n\n    /**\n     *  CLOSE ALL\n     *\n     *  Closes all panels\n     */\n    closeAll() {\n        this.headers.forEach((header, headerIndex) => {\n            this.togglePanel('closed', headerIndex);\n        });\n    }\n\n\n    /**\n     *  GET STATE\n     *\n     *  Getting state of headers. By default gets state of all headers\n     *  @param {string} animationAction - The animation you want to invoke\n     *  @param {integer} headerIndex    - The header node index you want to animate\n     */\n    togglePanel(animationAction, headerIndex) {\n        if(animationAction !== undefined && headerIndex !== undefined) {\n            if(animationAction === 'closed') {\n                // 1. Getting ID of panel that we want to close\n                const header        = this.headers[headerIndex];\n                const panelToClose  = this.panels[headerIndex];\n\n                // 2. Closeing panel\n                panelToClose.classList.add(this.settings.hiddenClass);\n\n                // 3. Removing active classes\n                panelToClose.classList.remove(this.settings.activeClass);\n                header.classList.remove(this.settings.activeClass);\n\n                // 4. Set aria attrs\n                header.setAttribute('aria-expanded', false);\n\n                // 5. Resetting toggling so a new event can be fired\n                panelToClose.onCSSTransitionEnd(() => this.toggling = false );\n            } else if(animationAction === 'open') {\n                // 1. Getting ID of panel that we want to open\n                const header      = this.headers[headerIndex];\n                const panelToOpen = this.panels[headerIndex];\n\n                // 2. Opening panel\n                panelToOpen.classList.remove(this.settings.hiddenClass);\n\n                // 3. Adding active classes\n                panelToOpen.classList.add(this.settings.activeClass);\n                header.classList.add(this.settings.activeClass);\n\n                // 4. Set aria attrs\n                header.setAttribute('aria-expanded', true);\n\n                // 5. Resetting toggling so a new event can be fired\n                panelToOpen.onCSSTransitionEnd(() => this.toggling = false );\n            }\n        }\n    }\n\n\n    // @TODO - is this needed anymore?\n    // checkState(headerId) {\n    //     let state = this.states[headerId].state;\n    //\n    //     if(state === 'closed') {\n    //         return state;\n    //     } else if(state === 'open') {\n    //         return state;\n    //     }\n    // }\n\n\n    /**\n     *  GET STATE\n     *\n     *  Getting state of headers. By default gets state of all headers\n     *  @param {array} headerIds - Id/'s of the headers you want to check\n     */\n    getState(headerIds = []) {\n        if(headerIds.length && Array.isArray(headerIds)) {\n            let states = headerIds.map( header => this.states[header] );\n\n            return states;\n        } else {\n            return this.states;\n        }\n    }\n\n\n    /**\n     *  TOGGLE STATE\n     *\n     *  Toggling the state value\n     *  @param {string} currentState - Current state value for a header\n     */\n    toggleState(currentState) {\n        if(currentState !== undefined) {\n            return (currentState === 'closed') ? 'open' : 'closed';\n        }\n    }\n\n\n\n    /**\n     *  HEADERS TO OPEN\n     *\n     *  Setting which headers should be open when accordion is initalised\n     *  @param {array} headersToOpen - Array of ID's for the headers to be open\n     */\n    _openHeadersOnLoad(headersToOpen = []) {\n        if (headersToOpen.length && Array.isArray(headersToOpen)) {\n            let headers = headersToOpen.filter(header => header != undefined);\n\n            headers.forEach(header => {\n                this.setState(header);\n            });\n        }\n    }\n\n\n    /**\n     *  SET UP ATTRIBUTES\n     *\n     *  Initalises accordion attribute methods\n     */\n    _setupAttributes() {\n        // Adding ID & aria-controls\n        this._setupHeaders();\n\n        // Adding ID & aria-labelledby\n        this._setupPanels();\n\n        // Inserting data-attribute onto each `header`\n        this._insertDataAttrs();\n    }\n\n\n\n    /**\n     *  SET PANEL HEIGHT - ** DEPRICATED **\n     *\n     *  Depreicated as this method is becoming public and\n     *  I want to name it something that lets devs know\n     *  it's not just for using inside the `init()` method.\n     */\n    _setPanelHeight() {\n        this.calculateAllPanelsHeight();\n    }\n\n\n\n    /**\n     *  CALCULATE PANEL HEIGHT\n     *\n     *  Setting height for panels using pannels inner element\n     */\n    calculatePanelHeight(panel) {\n        const panelInner = panel.querySelector(this.settings.panelInnerClass);\n\n        let activeHeight = panelInner.offsetHeight;\n\n        return panel.style.maxHeight = `${activeHeight}px`;\n    }\n\n\n\n    /**\n     *  CALCULATE PANEL HEIGHT\n     *\n     *  Setting height for panels using pannels inner element\n     */\n    calculateAllPanelsHeight() {\n        this.panels.forEach(panel => {\n            this.calculatePanelHeight(panel);\n        });\n    }\n\n\n\n    /**\n     * SET UP HEADERS\n     */\n    _setupHeaders() {\n        this.headers.forEach( (header, index) => {\n            header.setAttribute('id', `badger-accordion-header-${this.ids[index].id}`);\n            header.setAttribute('aria-controls', `badger-accordion-panel-${this.ids[index].id}`);\n        });\n    }\n\n\n    /**\n     * SET UP PANELS\n     */\n    _setupPanels() {\n        this.panels.forEach( (panel, index) => {\n            panel.setAttribute('id', `badger-accordion-panel-${this.ids[index].id}`);\n            panel.setAttribute('aria-labelledby', `badger-accordion-header-${this.ids[index].id}`);\n            if(this.settings.roles === true || this.settings.roles.region !== false) {\n                this._setRole('region', panel);\n            }\n        });\n    }\n}\n\n\n// Export\nexport default BadgerAccordion;\n"],"names":["Array","from","toStr","Object","prototype","toString","isCallable","fn","call","toInteger","value","number","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","len","min","max","arrayLike","C","items","TypeError","mapFn","arguments","length","undefined","T","A","k","kValue","document","window","el","body","documentElement","s","style","prefixAnimation","prefixTransition","WebkitAnimation","MozAnimation","OAnimation","WebkitTransition","MozTransition","OTransition","defineProperty","callback","runOnce","e","target","removeEventListener","type","addEventListener","getComputedStyle","enumerable","writable","BadgerAccordion","options","container","querySelector","defaults","headerClass","panelClass","panelInnerClass","hiddenClass","activeClass","hidenClass","initializedClass","initalisedClass","headerDataAttr","openMultiplePanels","openHeadersOnLoad","addListenersOnInit","headerOpenLabel","headerCloseLabel","roles","settings","children","headerParent","filter","header","classList","contains","substr","headers","reduce","acc","a","child","concat","panels","panel","toggleEl","querySelectorAll","states","map","state","ids","id","random","toggling","init","console","log","_setupAttributes","_initalState","calculateAllPanelsHeight","_insertDataAttrs","_addListeners","_finishInitialization","role","setAttribute","headersToOpen","_openHeadersOnLoad","_renderDom","forEach","index","add","_setRole","_this","handleClick","targetHeader","headerIndex","targetHeaderClass","setState","targetHeaderId","getState","newState","toggleState","open","close","togglePanel","animationAction","panelToClose","remove","onCSSTransitionEnd","panelToOpen","headerIds","isArray","currentState","_setupHeaders","_setupPanels","panelInner","activeHeight","offsetHeight","maxHeight","calculatePanelHeight","region"],"mappings":"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"}