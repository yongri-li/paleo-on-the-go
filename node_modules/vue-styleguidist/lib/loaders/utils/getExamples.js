"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = getExamples;

var fs = _interopRequireWildcard(require("fs"));

var path = _interopRequireWildcard(require("path"));

var _qss = _interopRequireDefault(require("qss"));

var _requireIt = _interopRequireDefault(require("react-styleguidist/lib/loaders/utils/requireIt"));

var examplesLoader = path.resolve(__dirname, '../examples-loader.js');
/**
 * Get require statement for examples file if it exists, or for default examples if it was defined.
 *
 * @param {string} file
 * @param {string} examplesFile
 * @param {string} displayName
 * @param {string} defaultExample
 * @param {boolean} isComponentDocInVueFile
 * @returns {object|Array}
 */

function getExamples(file, examplesFile, displayName, defaultExample, isComponentDocInVueFile) {
  var examplesFileToLoad = examplesFile || defaultExample;

  if (!examplesFileToLoad) {
    return null;
  }

  var relativePath = "./".concat(path.relative(path.dirname(examplesFileToLoad), file));
  var query = {
    displayName: displayName,
    file: relativePath,
    shouldShowDefaultExample: !examplesFile && !!defaultExample && !isComponentDocInVueFile,
    customLangs: 'vue|js|jsx'
  };

  if (examplesFile && fs.existsSync(examplesFile)) {
    return (0, _requireIt["default"])("!!".concat(examplesLoader, "?").concat(_qss["default"].encode(query), "!").concat(examplesFile));
  }

  if (defaultExample && !isComponentDocInVueFile) {
    return (0, _requireIt["default"])("!!".concat(examplesLoader, "?").concat(_qss["default"].encode(query), "!").concat(defaultExample));
  }

  return null;
}