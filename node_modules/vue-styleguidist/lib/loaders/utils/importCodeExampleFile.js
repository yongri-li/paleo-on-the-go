"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = importCodeExampleFile;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var fs = _interopRequireWildcard(require("fs"));

var path = _interopRequireWildcard(require("path"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Extract example from file
 */
var importRE = /^\[import\]\(([./\w]+)\)/;

function importCodeExampleFile(example, mdPath, wp) {
  var lang = importRE.exec(example.lang || '');

  if (lang) {
    var filePath = lang[1];
    var absoluteFilePath = path.resolve(path.dirname(mdPath), filePath);
    wp.addDependency(absoluteFilePath);
    example.content = fs.readFileSync(absoluteFilePath, 'utf8');
    example.lang = path.extname(filePath).slice(1);
    var folderPath = path.dirname(filePath);

    if (folderPath !== '.') {
      example.settings = _objectSpread({}, example.settings, {
        importpath: folderPath
      });
    }
  }

  return example;
}