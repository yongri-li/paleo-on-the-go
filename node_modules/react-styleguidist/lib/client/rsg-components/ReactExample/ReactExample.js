function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Wrapper from 'rsg-components/Wrapper';
import compileCode from '../../utils/compileCode';
import splitExampleCode from '../../utils/splitExampleCode';
/* eslint-disable react/no-multi-comp */

var ReactExample =
/*#__PURE__*/
function (_Component) {
  _inheritsLoose(ReactExample, _Component);

  function ReactExample() {
    return _Component.apply(this, arguments) || this;
  }

  var _proto = ReactExample.prototype;

  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
    return this.props.code !== nextProps.code;
  } // Run example code and return the last top-level expression
  ;

  _proto.getExampleComponent = function getExampleComponent(compiledCode) {
    return this.props.evalInContext("\n\t\t\t" + compiledCode + "\n\t\t");
  };

  _proto.render = function render() {
    var _this$props = this.props,
        code = _this$props.code,
        _this$props$compilerC = _this$props.compilerConfig,
        compilerConfig = _this$props$compilerC === void 0 ? {} : _this$props$compilerC,
        onError = _this$props.onError;
    var compiledCode = compileCode(code, compilerConfig, onError);

    if (!compiledCode) {
      return null;
    }

    var _splitExampleCode = splitExampleCode(compiledCode),
        example = _splitExampleCode.example;

    var ExampleComponent = this.getExampleComponent(example);
    var wrappedComponent = React.createElement(Wrapper, {
      onError: onError
    }, React.createElement(ExampleComponent, null));
    return wrappedComponent;
  };

  return ReactExample;
}(Component);

_defineProperty(ReactExample, "propTypes", {
  code: PropTypes.string.isRequired,
  evalInContext: PropTypes.func.isRequired,
  onError: PropTypes.func.isRequired,
  compilerConfig: PropTypes.object
});

export { ReactExample as default };